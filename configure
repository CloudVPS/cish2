#!/bin/sh
# ===========================================================================
# Configure script generated by tina
# ===========================================================================

# ---------------------------------------------------------------------------
# Solaris' /bin/sh uses a braindead builtin echo, circumvent
# ---------------------------------------------------------------------------

TEST=`echo -n ""`
if [ -z "$TEST" ]; then
  ECHON="echo -n"
  NNL=""
else
  ECHON="/usr/bin/echo"
  NNL="\c"
fi

# ---------------------------------------------------------------------------
# Figure out if there's a Vendorware C++ compiler on board
# ---------------------------------------------------------------------------

$ECHON "looking for c compiler: $NNL"

if [ ! -z "$CC" ]; then
  CC=`which $CC 2>/dev/null`
fi
if [ -z "$CC" ]; then
  CC=`which cc 2>/dev/null`
fi

if [ -f "$CC" ]; then
  actually_gcc=`$CC -v 2>&1 | grep gcc | sed -e "s/^gcc/Y/"`

  cat >conftest.c <<_eof_
#include <stdio.h>
int main(int argc, char *argv[]) {
  printf ("hello, nurse\n");
}
_eof_

  $CC -o conftest.bin conftest.c >/dev/null 2>&1 || actually_gcc="YES"
  rm -f conftest.c conftest.bin >/dev/null 2>&1
  if [ ! -z "$actually_gcc" ]; then
    CC=""
  fi
fi

if [ -f "$CC" ]; then
  echo "$CC"
  CFLAGS="-n32 -O"
  SHARED="-shared"
  LD="$CC"
  LDFLAGS=""
else
  CC=`which gcc`
  if [ -f "$CC" ]; then
    echo "$CC"
    CFLAGS=${CFLAGS}
    SHARED="-shared -fPIC"
    LD="$CC"
    LDFLAGS=""
  else
    echo "fail"
    CC=""
    exit 1;
  fi
fi

COMPILER=$CC
COMPILERFLAGS=$CFLAGS
# ---------------------------------------------------------------------------
# Figure out whether we need libcrypt
# ---------------------------------------------------------------------------

cat >conftest.c <<EOF
#include <crypt.h>
int main (int argc, char *argv[])
{
  char *test = crypt("abcdefg","aB");
  return 1;
}
EOF

$ECHON "checking where crypt() hides: $NNL"
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >> configure.log 2>&1; then
  CRYPTH="#include <crypt.h>"
  echo "crypt.h"
else
cat >conftest.c <<EOF
#include <unistd.h>
int main (int argc, char *argv[])
{
   char *test = crypt("abcdefg","aB");
   return 1;
}
EOF
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >>configure.log 2>&1; then
  echo "unistd.h"
  CRYPTDEFINE=""
else
cat >conftest.c <<EOF
#define _XOPEN_SOURCE
#include <unistd.h>
int main (int argc, char *argv[])
{
   char *test = crypt("abcdefg","aB");
   return 1;
}
EOF
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >>configure.log 2>&1; then
  echo "unistd.h"
  CRYPTDEFINE="#define _XOPEN_SOURCE"
else
  cat > conftest.c <<EOF
#define _XOPEN_SOURCE 5
#include <unistd.h>
int main (int argc, char *argv[])
{
    char *test = crypt("abcdefg","aB");
    return 1;
}
EOF
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >> configure.log 2>&1; then
  echo "unistd.h (evil netbsd)"
  CRYPTDEFINE="#define _XOPEN_SOURCE 5"
else
  echo "failed"
  exit 1
fi
fi
fi
fi
$ECHON "checking whether crypt needs -lcrypt: $NNL"
if $COMPILER $COMPILERFLAGS -o conftest conftest.o >>configure.log 2>&1; then
  LIBCRYPT=""
  echo "no"
else
  if $COMPILER $COMPILERFLAGS -o conftest conftest.o -lcrypt >>configure.log 2>&1; then
    LIBCRYPT="-lcrypt"
    echo "yes"
  else
    echo "error!"
    exit 1
  fi
fi

rm -f conftest.c conftest.o conftest
# ---------------------------------------------------------------------------
# Create the makeinclude file
# ---------------------------------------------------------------------------

$ECHON "creating makeinclude: $NNL"

DATE=`date`

cat >makeinclude <<EOF
# Makeinclude generated by configure: $DATE

CC = $CC
CFLAGS = $CFLAGS
LD = $LD
LDFLAGS = $LDFLAGS
LIBS = $LIBCRYPT
SHARED = $SHARED
EOF

echo "done"
# ---------------------------------------------------------------------------
# Create the platform.h file
# ---------------------------------------------------------------------------

$ECHON "creating platform.h: $NNL"

cat >platform.h <<EOF
#ifndef _PLATFORM_H
#define _PLATFORM_H
$CRYPTH
$CRYPTDEFINE
#endif
EOF

echo "done"
if [ -f configure.log ]; then rm -f configure.log; fi

